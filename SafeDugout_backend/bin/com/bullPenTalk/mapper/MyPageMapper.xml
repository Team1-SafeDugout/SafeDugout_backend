<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="myPage">

	
	<!-- 포인트 충전 내역 조회 -->
	<select id="selectPoint" resultType="pointChargeRecordDTO">
	<![CDATA[
	SELECT *
	FROM (
	    SELECT ROWNUM AS rnum, subquery.*
	    FROM (
	        SELECT P.CHARGE_POINT,
	               P.AFTER_CHARGE_POINT,
	               P.CHARGE_DATE
	        FROM TBL_POST P
	        WHERE P.MEMBER_NUMBER = #{memberNumber}
	        ORDER BY P.CHARGE_DATE DESC
	    ) subquery
	)
	WHERE rnum BETWEEN #{startRow} AND #{endRow}
	]]>
	
	</select>
	<!-- 포인트 충전 -->
	<update id="chargePoint" parameterType="MemberDTO">
		update tbl_member set
		member_point = #{memberPoint}
		where member_number = #{memberNumber}
	</update>
	
	<!-- 게시글 조회 -->
	<select id="selectPostList" resultType="PostDTO" parameterType = "int">
		<![CDATA[
		SELECT *
		FROM (
		    SELECT ROWNUM AS rnum, subquery.*
		    FROM (
		        SELECT P.POST_NUMBER,
		        	   P.MEMBER_NUMBER,
		        	   NVL(P.TEAM_NUMBER, 0) as teamNumber,
		        	   NVL(P.ADMIN_NUMBER,0) as adminNumber,
		               P.POST_TITLE,
		               P.POST_CONTENT,
		               P.POST_DATE,
		               P.POST_UPDATE,
		               NVL(P.POST_LINK, 'NONE') as postLink,
		               NVL(P.journalist, 'NONE') as journalist,
		               P.POST_TYPE
		        FROM TBL_POST P
		        WHERE (P.POST_TYPE = 1 OR P.POST_TYPE = 2) AND P.MEMBER_NUMBER = #{memberNumber}
		        ORDER BY P.POST_DATE DESC
		    ) subquery
		)
		WHERE rnum BETWEEN #{startRow} AND #{endRow}
		]]>
	</select>
	
	<!-- 게시글 전체 수 -->	
	<select id = "getTotalPost" resultType = "int" parameterType = "int">
		SELECT COUNT(P.POST_NUMBER)
	    FROM TBL_POST P
	    WHERE P.POST_TYPE IN (1, 2) AND P.MEMBER_NUMBER = #{memberNumber}
	</select>
	
	<!-- 게시글 삭제 -->
	<delete id="deletePost" parameterType="int">
		delete from tbl_post
		where post_number = #{postNumber}
	</delete>
	
	<!-- 댓글 조회 -->
	<select id="selectCommentList" resultType="CommentDTO" parameterType = "map" >
		<![CDATA[
		SELECT *
		FROM (
		    SELECT ROWNUM AS rnum, subquery.*
		    FROM (
		        SELECT C.COMMENT_NUMBER,
		        	   C.COMMENT_CONTENT,
		        	   C.COMMENT_DATE,
		        	   C.COMMENT_UPDATE,
		        	   M.MEMBER_ID,
		        	   C.POST_NUMBER,
		        	   C.MEMBER_NUMBER,
		        	   P.POST_TITLE,
		        	   (
		        	   	SELECT PM.MEMBER_ID
		        	   	FROM TBL_MEMBER PM
		        	   	JOIN TBL_POST PP ON PP.MEMBER_NUMBER = PM.MEMBER_NUMBER 
		        	   	WHERE P.POST_NUMBER = PP.POST_NUMBER
		        	   ) as postAuthor
		        FROM TBL_COMMENT C
		        JOIN TBL_MEMBER M ON C.MEMBER_NUMBER = M.MEMBER_NUMBER
		        JOIN TBL_POST P ON C.POST_NUMBER = P.POST_NUMBER
		        WHERE C.MEMBER_NUMBER = #{memberNumber}
		        ORDER BY C.COMMENT_DATE DESC
		    ) subquery
		)
		WHERE rnum BETWEEN #{startRow} AND #{endRow}
		]]>
	</select>
	
	<!-- 댓글 전체 수 -->
	<select id = "getTotalComment" resultType = "int" parameterType = "int">
		SELECT COUNT(C.COMMENT_NUMBER)
		FROM TBL_COMMENT C
		WHERE C.MEMBER_NUMBER = #{memberNumber}
	</select>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteComment" parameterType="int">
		delete from tbl_comment 
		where comment_number = #{commentNumber}
	</delete>
	
	<!-- 구매 목록 조회 -->
	<select id="selectTradeList" resultType="MyPageTradeListDTO" parameterType = "map">
	<![CDATA[
		SELECT *
		FROM (
		    SELECT ROWNUM AS rnum, subquery.*
		    FROM (
				SELECT 	SP.SELL_POST_TITLE AS title,
						TD.DEALTYPE_NAME AS dealType,
						TS.STATUS_NAME AS tradeStatus,
						SP.PRICE_POINT AS pricePoint,
						SP.SELL_POST_CREATION_DATE AS addDate,
						TP.PAYMENT_DATE AS buyDate,
						TP.COMPLETE_DATE AS confirmDate,
						SELLER.MEMBER_NUMBER AS sellerMemberNumber,
						SELLER.MEMBER_ID AS sellerMemberId,
						BUYER.MEMBER_NUMBER AS buyerMemberNumber,
						BUYER.MEMBER_ID AS buyerMemberId,
						SP.SELL_POST_NUMBER AS sellPostNumber,
						TP.TRADE_NUMBER AS tradePostNumber
				FROM TBL_SELL_POST SP
				LEFT JOIN TBL_TRADE_POST TP ON SP.SELL_POST_NUMBER  = TP.SELL_POST_NUMBER
				LEFT JOIN TBL_MEMBER SELLER ON SP.MEMBER_NUMBER  = SELLER.MEMBER_NUMBER
				LEFT JOIN TBL_MEMBER BUYER ON TP.BUY_MEMBER = BUYER.MEMBER_NUMBER
				JOIN TBL_DEALTYPE TD ON SP.DEALTYPE_ID = TD.DEALTYPE_ID
				JOIN TBL_TRADE_STATUS TS ON SP.STATUS_ID = TS.STATUS_ID
				WHERE BUYER.MEMBER_NUMBER = #{memberNumber}
				ORDER BY SP.SELL_POST_CREATION_DATE DESC
		    ) subquery
		)
		WHERE rnum BETWEEN #{startRow} AND #{endRow}
	]]>
	</select>
	
	<!-- 구매 확정 -->
	<update id="completeTrade" parameterType="int">
		update tbl_trade_post 
		set status_number = 3
		where SELL_POST_NUMBER = #{sellPostNumber}
	</update>
	
	<!-- 구매 확정 Sell -->
	<update id = "completeSell" parameterType="int">
		UPDATE TBL_SELL_POST
		SET STATUS_ID = 3
		WHERE SELL_POST_NUMBER = #{sellPostNumber}
	</update>
	
	<!-- 구매 확정 transaction -->
	<update id = "completeTransaction" parameterType = "int">
		update TBL_POINT_TRANSACTION
		set TRANSACTION_STATUS = 3
		WHERE SELL_POST_NUMBER = #{sellPostNumber}
	</update>
	
	<!-- 구매 취소 -->
	<update id="cancleTradeUpdate" parameterType="int">
		UPDATE TBL_SELL_POST
		SET STATUS_ID = 1
		WHERE SELL_POST_NUMBER = #{sellPostNumber}
	</update>
	
	<delete id="cancleTradeDelete" parameterType="int">
		delete from tbl_trade_post 
		where sell_post_number = #{sellPostNumber}
	</delete>
	
	<delete id = "cancleTradeSaction" parameterType = "int">
		delete from TBL_POINT_TRANSACTION
		WHERE SELL_POST_NUMBER = #{sellPostNumber}
	</delete>
	
	<!-- 구매글 전체 수 -->
	<select id = "getTotalTrade" parameterType = "int" resultType = "int">
		SELECT COUNT(P.TRADE_NUMBER)
		FROM TBL_TRADE_POST P
		WHERE P.BUY_MEMBER = #{memberNumber} AND (STATUS_NUMBER = 2)
	</select>
	
	<!-- 구매글 상세 -->
	<select id = "selectDetailTrade" parameterType = "int" resultType = "MyPageTradeListDTO">
		SELECT 	SP.SELL_POST_TITLE AS title,
				TD.DEALTYPE_NAME AS dealType,
				TS.STATUS_NAME AS tradeStatus,
				SP.PRICE_POINT AS pricePoint,
				SP.SELL_POST_CREATION_DATE AS addDate,
				TP.PAYMENT_DATE AS buyDate,
				TP.COMPLETE_DATE AS confirmDate,
				SELLER.MEMBER_NUMBER AS sellerMemberNumber,
				SELLER.MEMBER_ID AS sellerMemberId,
				BUYER.MEMBER_NUMBER AS buyerMemberNumber,
				BUYER.MEMBER_ID AS buyerMemberId,
				SP.SELL_POST_NUMBER AS sellPostNumber,
				TP.TRADE_NUMBER AS tradePostNumber,
				SP.SELL_POST_CONTENT AS sellPostContent
		FROM TBL_SELL_POST SP
		LEFT JOIN TBL_TRADE_POST TP ON SP.SELL_POST_NUMBER  = TP.SELL_POST_NUMBER
		LEFT JOIN TBL_MEMBER SELLER ON SP.MEMBER_NUMBER  = SELLER.MEMBER_NUMBER
		LEFT JOIN TBL_MEMBER BUYER ON TP.BUY_MEMBER = BUYER.MEMBER_NUMBER
		JOIN TBL_DEALTYPE TD ON SP.DEALTYPE_ID = TD.DEALTYPE_ID
		JOIN TBL_TRADE_STATUS TS ON SP.STATUS_ID = TS.STATUS_ID
		WHERE SP.SELL_POST_NUMBER = #{sellPostNumber}	
	</select>
	
	<!-- 구매글 포인트 이동 확정 -->
	<update id = "givePoint" parameterType = "int">
	UPDATE TBL_MEMBER
	SET MEMBER_POINT = MEMBER_POINT + 
	(
		SELECT SUM(POINT_AMOUNT)
		FROM TBL_POINT_TRANSACTION TT
		WHERE TT.SELL_POST_NUMBER = #{sellPostNumber}
	)
	WHERE MEMBER_NUMBER = 
	(
		SELECT MEMBER_TO
		FROM TBL_POINT_TRANSACTION tpt 
		WHERE tpt.SELL_POST_NUMBER = #{sellPostNumber}
	)
	</update>
	
	<!-- 구매글 포인트 이동 취소 -->
	<update id = "canclePoint" parameterType = "map">
	UPDATE TBL_MEMBER
	SET MEMBER_POINT = MEMBER_POINT + 
	(
		SELECT SUM(POINT_AMOUNT)
		FROM TBL_POINT_TRANSACTION TT
		WHERE TT.SELL_POST_NUMBER = #{sellPostNumber}
	)
	WHERE MEMBER_NUMBER = 
	(
		SELECT MEMBER_FROM
		FROM TBL_POINT_TRANSACTION tpt 
		WHERE tpt.SELL_POST_NUMBER = #{sellPostNumber}
	)
	</update>
	
	<!-- 판매 목록 조회 -->
	<select id="selectSellList" resultType="MyPageTradeListDTO" parameterType = "map">
	<![CDATA[
		SELECT *
		FROM (
		    SELECT ROWNUM AS rnum, subquery.*
		    FROM (
				SELECT 	SP.SELL_POST_TITLE AS title,
						TD.DEALTYPE_NAME AS dealType,
						TS.STATUS_NAME AS tradeStatus,
						SP.PRICE_POINT AS pricePoint,
						SP.SELL_POST_CREATION_DATE AS addDate,
						TP.PAYMENT_DATE AS buyDate,
						TP.COMPLETE_DATE AS confirmDate,
						SELLER.MEMBER_NUMBER AS sellerMemberNumber,
						SELLER.MEMBER_ID AS sellerMemberId,
						BUYER.MEMBER_NUMBER AS buyerMemberNumber,
						BUYER.MEMBER_ID AS buyerMemberId,
						SP.SELL_POST_NUMBER AS sellPostNumber,
						TP.TRADE_NUMBER AS tradePostNumber,
						SP.SELL_POST_CONTENT AS sellPostContent
				FROM TBL_SELL_POST SP
				LEFT JOIN TBL_TRADE_POST TP ON SP.SELL_POST_NUMBER  = TP.SELL_POST_NUMBER
				LEFT JOIN TBL_MEMBER SELLER ON SP.MEMBER_NUMBER  = SELLER.MEMBER_NUMBER
				LEFT JOIN TBL_MEMBER BUYER ON TP.BUY_MEMBER = BUYER.MEMBER_NUMBER
				JOIN TBL_DEALTYPE TD ON SP.DEALTYPE_ID = TD.DEALTYPE_ID
				JOIN TBL_TRADE_STATUS TS ON SP.STATUS_ID = TS.STATUS_ID
				WHERE SELLER.MEMBER_NUMBER = #{memberNumber}
				ORDER BY SP.SELL_POST_CREATION_DATE DESC
		    ) subquery
		)
		WHERE rnum BETWEEN #{startRow} AND #{endRow}
	]]>
	</select>
	
	<!-- 판매글 삭제 -->
	<delete id="deleteSell" parameterType="int">
		delete from tbl_sell_post
		where sell_post_number = #{sellPostNumber}
	</delete>
	
	<!-- 판매글 전체 수 -->
	<select id = "getTotalSell" parameterType = "int" resultType = "int">
		SELECT COUNT(P.SELL_POST_NUMBER)
		FROM TBL_SELL_POST P
		WHERE P.MEMBER_NUMBER = #{memberNumber}
	</select>
		
	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="MemberDTO">
		update tbl_member
		set m.member_pw = #{memberPw}, m.member_phone = #{memberPhone}, m.member_emain = #{memberEmail},
		m.member_postal_code = #{memberPostalCode}, a.detailed_address = #{detailedAddress},
		m.my_team = #{myTeam}
		from tbl_member m join tbl_address a on m.member_postal_code = a.postal_code
		where member_number = #{memberNumber}
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id="quit" parameterType="int">
		delete from tbl_member
		where member_number = #{memberNumber}
	</delete>
	
	<!-- 탈퇴 시 거래글 확인 -->
	<select id = "checkTrade" parameterType="int" resultType = "int">
		SELECT COUNT(tsp.SELL_POST_NUMBER) + COUNT(ttp.SELL_POST_NUMBER) 거래글
		FROM TBL_MEMBER tm
		LEFT JOIN TBL_SELL_POST tsp ON tsp.MEMBER_NUMBER = tm.MEMBER_NUMBER
		LEFT JOIN TBL_TRADE_POST ttp ON ttp.BUY_MEMBER = tm.MEMBER_NUMBER 
		WHERE tm.MEMBER_NUMBER = #{memberNumber}
		AND (tsp.STATUS_ID = 2 OR ttp.STATUS_NUMBER = 2)
	</select>
	
	<!-- 멤버 포인트 조회 -->
	<select id = "getMemberPoint" parameterType="int" resultType="int">
		SELECT MEMBER_POINT
		FROM TBL_MEMBER
		WHERE MEMBER_NUMBER = #{memberNumber}
	</select>
	
</mapper>